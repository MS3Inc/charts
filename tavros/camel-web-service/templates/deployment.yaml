apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "camel-web-service.fullname" . }}
  labels:
    {{- include "camel-web-service.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "camel-web-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kuma.io/virtual-probes-port: "19001"
        co.elastic.logs.camel-web-service/enabled: "true"
        co.elastic.logs.camel-web-service/json.overwrite_keys: "true"
        co.elastic.logs.camel-web-service/json.keys_under_root: "true"
        co.elastic.logs.camel-web-service/json.add_error_key: "true"
        co.elastic.logs.camel-web-service/json.message_key: message
        co.elastic.monitor/type: http
        co.elastic.monitor/hosts: "{{ include "camel-web-service.fullname" . }}.{{.Release.Namespace}}.svc.cluster.local:19001/8080/actuator/health/liveness"
        co.elastic.monitor/schedule: "@every 5s"
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "camel-web-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "camel-web-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: actuator
              containerPort: 8080
              protocol: TCP
            - name: hb-monitor
              containerPort: 19001
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: actuator
        {{- with .Values.readinessProbe }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: actuator
        {{- with .Values.livenessProbe }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
          env:
            - name: JAEGER_SERVICE_NAME
              value: {{ .Release.Name }}
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
              # todo: reconsider how these should be managed
            - name: JAEGER_SAMPLER_PARAM
              value: '1'
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_PROPAGATION
              value: "b3"
          {{- with .Values.podEnvVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
